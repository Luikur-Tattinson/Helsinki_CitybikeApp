@model BikeApp.Models.KeyModel

@{
    ViewData["Title"] = "Home Page";
    string orderBy = ViewContext.HttpContext.Request.Query["orderBy"].FirstOrDefault();
    string sortOrder = ViewContext.HttpContext.Request.Query["sortOrder"].FirstOrDefault();
}

<h1>Stations</h1>

<div id="map" style="height: 400px; width: 100%;"></div>

<table>
    <thead>
        <tr>
            <th>
                <a href="?orderBy=Nimi&amp;sortOrder=@Model.SortOrderFor("Nimi")">
                    Nimi
                </a>
            </th>
            <th>
                <a href="?orderBy=Kaupunki&amp;sortOrder=@Model.SortOrderFor("Kaupunki")">
                    Kaupunki
                </a>
            </th>
            <!-- Add more columns as needed -->
        </tr>
    </thead>

    <tbody>
        @foreach (var station in Model.Stations)
        {
            <tr>
                <td>@station.Nimi</td>
                <td>@station.Kaupunki</td>
                <!-- Add more columns as needed -->
            </tr>
        }
    </tbody>
</table>


<div>
    @if (Model.Pagination.TotalPages > 1)
    {
        <nav>
            <ul class="pagination">
                @if (Model.Pagination.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="/Home/Index?page=1">First</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="/Home/Index?page=@(Model.Pagination.CurrentPage - 1)">Previous</a>
                    </li>
                }
                @for (int i = Model.Pagination.CurrentPage - 2; i <= Model.Pagination.CurrentPage + 2 && i <= Model.Pagination.TotalPages; i++)
                {
                    if (i > 0)
                    {
                        if (Model.Pagination.CurrentPage == i)
                        {
                            <li class="page-item active">
                                <span class="page-link">@i</span>
                            </li>
                        }
                        else
                        {
                            <li class="page-item">
                                <a class="page-link" href="/Home/Index?page=@i">@i</a>
                            </li>
                        }
                    }
                }
                @if (Model.Pagination.CurrentPage < Model.Pagination.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="/Home/Index?page=@(Model.Pagination.CurrentPage + 1)">Next</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="/Home/Index?page=@Model.Pagination.TotalPages">Last</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>

<script>
    function initMap() {
        var options = {
            zoom: 12,
            center: { lat: 60.19193, lng: 24.91967 }
        };

        var map = new google.maps.Map(document.getElementById('map'), options);
        var infoWindow = new google.maps.InfoWindow();

        var openInfoWindow = null;

        @if (Model.AllStations != null && Model.AllStations.Count > 0)
    {
        @foreach (var station in Model.AllStations)
        {
            <text>
                                var lng = parseFloat('@station.X'.replace(',', '.'));
                var lat = parseFloat('@station.Y'.replace(',', '.'));

                if (!isNaN(lat) && !isNaN(lng)) {
                    var marker = new google.maps.Marker({
                        position: { lat: lat, lng: lng },
                        map: map
                    });

                    var content = '<div><h3>' + '@station.Nimi' + '</h3>' +
                        '<p><strong>' + '@station.Namn' + '</strong></p>' +
                        '<p>' + 'Osoite: ' + '@station.Osoite' + '</p>' +
                        '<p>' + 'Kaupunki: ' + '@station.Kaupunki' + '</p>' +
                        '<p>' + 'Operaattori: ' + '@station.Operaattor' + '</p>' +
                        '<p>' + 'Kapasiteetti: ' + '@station.Kapasiteet' + '</p></div>';

                    addMarkerListener(marker, content);
                }
            </text>
        }
    }

            function addMarkerListener(marker, content) {
                marker.addListener('click', function () {
                    if (openInfoWindow) {
                        openInfoWindow.close();
                    }

                    infoWindow.setContent(content);
                    infoWindow.open(map, marker);
                    openInfoWindow = infoWindow;
                });
            }
    }

    function loadGoogleMaps() {
        var script = document.createElement('script');
        script.src = 'https://maps.googleapis.com/maps/api/js?key=@Model?.Key&callback=initMap';
        document.head.appendChild(script);
    }

    window.addEventListener('load', loadGoogleMaps);
</script>
